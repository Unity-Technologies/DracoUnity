Sonar-Mac-Dotnet-SonarScanner:
  name: Dotnet Sonar Scanner MacOS
  agent:
    type: Unity::VM::osx
    flavor: m1.mac
    image: package-ci/macos-12-sonar:stable
  variables:
    EDITOR_VERSION: "2022"
    SONAR_HOST_URL: "https://sonarqube.internal.unity3d.com"
    PACKAGE_NAME: "com.unity.cloud.draco"
    PACKAGE_SCM: "https://github.cds.internal.unity3d.com/unity/com.unity.cloud.draco"
    SONARQUBE_PROJECT_NAME: "unity-cloud:com.unity.cloud.draco"
    RIDER_VERSION: "3.0.27"
  source:
    skip_checkout: true
  commands:
    - unity-downloader-cli -u $EDITOR_VERSION -p $YAMATO_WORK_DIR/.Editor -c Editor --fast

    - |
      unity-config settings editor-path $YAMATO_WORK_DIR/.Editor
      unity-config project create $YAMATO_SOURCE_DIR/SonarProject
      unity-config settings project-path $YAMATO_SOURCE_DIR/SonarProject
      unity-config project add dependency com.unity.ide.rider@$RIDER_VERSION

    - |
      cd $YAMATO_SOURCE_DIR/SonarProject/Packages
      git clone $GIT_REPOSITORY_URL --no-checkout
      cd $PACKAGE_NAME
      git fetch origin $GIT_REVISION
      git checkout -f --detach $GIT_REVISION
      git submodule sync --recursive
      git submodule update --init --recursive
      git submodule foreach git lfs pull

    - $YAMATO_WORK_DIR/.Editor/Unity.app/Contents/MacOS/Unity -projectPath $YAMATO_SOURCE_DIR/SonarProject -batchmode -quit -nographics -logFile $YAMATO_SOURCE_DIR/Editor.log -executeMethod "Packages.Rider.Editor.RiderScriptEditor.SyncSolution"

    - dotnet sonarscanner begin /k:$SONARQUBE_PROJECT_NAME /v:https://unity-ci.cds.internal.unity3d.com/job/$YAMATO_JOB_ID /d:sonar.host.url=$SONAR_HOST_URL /d:sonar.buildString=$GIT_REVISION /d:sonar.branch.name=$GIT_BRANCH /d:sonar.projectBaseDir=$YAMATO_SOURCE_DIR/SonarProject /d:sonar.sourceEncoding="UTF-8" /d:sonar.scm.provider=git /d:sonar.links.scm=$PACKAGE_SCM /d:sonar.log.level=DEBUG /d:sonar.verbose=true /d:sonar.qualitygate.wait=true /d:sonar.login=$SONARQUBE_PROD_ACCESS_TOKEN /d:sonar.cs.nunit.reportsPaths=$YAMATO_SOURCE_DIR/upm-ci~/test-results/package-$PACKAGE_NAME/**/TestResults.xml /d:sonar.cs.opencover.reportsPaths=$YAMATO_SOURCE_DIR/upm-ci~/test-results/CoverageResults/**/TestCoverageResults_*.xml /d:sonar.coverage.exclusions=Samples/**/*,Tests/**/*
    - dotnet build $YAMATO_SOURCE_DIR/SonarProject/SonarProject.sln /t:Rebuild /p:SonarQubeTestProject=false
    - dotnet sonarscanner end /d:sonar.login=$SONARQUBE_PROD_ACCESS_TOKEN

  dependencies:
    - .yamato/package-coverage.yml#tests_coverage_all

  triggers:
    cancel_old_ci: true
    expression: |
        (pull_request.target eq "main"  AND
        NOT pull_request.push.changes.all match "**/*.md") OR
        (pull_request.target eq "master" AND
        NOT pull_request.push.changes.all match "**/*.md") OR
        (push.branch eq "main" OR push.branch eq "master")

  artifacts:
    logs:
      paths:
        - "**/*.log"
        - "*.log"
